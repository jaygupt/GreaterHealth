<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/headTag', {title: "Find My Ideal Plan"}); %>
    <link rel="stylesheet" href="/css/findIdealPlan.css">
  </head>
  <body>
    <%- include('../partials/header'); %>

    <h1>Find My Ideal Plan</h1>
    <h3>Fill out the information below, and click "Find me a Plan!" to view competitive offers in your area.</h3>

    <form id="findPlanForm">
      <%- include('../partials/zipCodeInput'); %>

      <div class="form-group">
        <label for="income">Income:</label>
        <input 
          class="form-control"
          id="income" 
          name="income" 
          type="number" 
          step="0.01" 
          placeholder="0.00" 
          required>
      </div>

      <fieldset class="form-group">
        <label for="aptc_eligible">Are you APTC Eligible?</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="yes" name="aptc_eligible" value="true" required>
          <label class="form-check-label" for="yes">Yes</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="no" name="aptc_eligible" value="false">
          <label class="form-check-label" for="no">No</label>
        </div>
      </fieldset>

      <div class="form-group">
        <label for="dob">Date of Birth:</label>
        <input class="form-control" type="date" id="dob" name="dob" required>
      </div>

      <fieldset class="form-group">
        <label for="gender">Gender:</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="male" name="gender" value="Male" required>
          <label class="form-check-label" for="male">Male</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="female" name="gender" value="Female">
          <label class="form-check-label" for="female">Female</label>
        </div>
      </fieldset>

      <fieldset class="form-group" id="isFemale" style="display:none">
        <label for="is_pregnant">Are you Pregnant?</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="isPregnant" name="is_pregnant" value="true">
          <label class="form-check-label" for="isPregnant">Yes</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="notPregnant" name="is_pregnant" value="false" checked>
          <label class="form-check-label" for="notPregnant">No</label>
        </div>
      </fieldset>

      <fieldset class="form-group">
        <label for="is_parent">Are you a Parent?</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="isParent" name="is_parent" value="true" required>
          <label class="form-check-label" for="isParent">Yes</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="notParent" name="is_parent" value="false">
          <label class="form-check-label" for="notParent">No</label>
        </div>
      </fieldset>

      <fieldset class="form-group">
        <label for="has_married_couple">Are you Currently Married?</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="isMarried" name="has_married_couple" value="true" required>
          <label class="form-check-label" for="isMarried">Yes</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="notMarried" name="has_married_couple" value="false">
          <label class="form-check-label" for="notMarried">No</label>
        </div>
      </fieldset>

      <fieldset class="form-group">
        <label for="uses_tobacco">Do you use Tobacco?</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="usesTobacco" name="uses_tobacco" value="true" required>
          <label class="form-check-label" for="usesTobacco">Yes</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="noTobacco" name="uses_tobacco" value="false">
          <label class="form-check-label" for="noTobacco">No</label>
        </div>
      </fieldset>

      <fieldset class="form-group">
        <label for="utilization_level">Intended Health Plan Utilization Level:</label>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="high" name="utilization_level" value="High" required>
          <label class="form-check-label" for="high">High</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="medium" name="utilization_level" value="Medium">
          <label class="form-check-label" for="medium">Medium</label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" id="low" name="utilization_level" value="Low">
          <label class="form-check-label" for="low">Low</label>
        </div>
      </fieldset>

      <%- include('../partials/dropDownofSurgeries', {
        inputLabelAndAriaLabel: 'Surgery Needed',
        labelAndNameAndID: 'surgeryNeeded'
      }); %>

      <%- include('../partials/iofnInput'); %>

      <button class="btn btn-success" type="submit">Find me a Plan!</button>
    </form>

    <div id="result"></div>

    <script>
      $(document).ready(() => {
        // show "Are you Pregnant?" question depending on answer to gender
        $("#female").click(() => {
          $("#isFemale").show();
        });

        $("#male").click(() => {
          $("#isFemale").hide();
        })
      });

      function returnFromExperiences(theCity, theState, fromExperiences) {
        // counter for tables
        var sameCityAndStateCounter = 1;
        var sameStateCounter = 1;

        var sameCityAndState = fromExperiences.experiencesWithSameCityAndState;
        var sameState = fromExperiences.experiencesWithSameState;

        var theHTML = `<div class="table-responsive aTable" style="margin-top: 50px;">
          <table class="table table-hover caption-top wideTable">
          <caption>Health Insurance Experiences in ${theCity}, ${theState}:</caption>
          <thead>
            <tr>
              <th scope="col"></th>
              <th scope="col">Age</th>
              <th scope="col">History of Tobacco Use or Smoking</th>
              <th scope="col">Previous Surgeries</th>
              <th scope="col">Out of Pocket Cost After Insurance</th>
              <th scope="col">Hospital Name</th>
              <th scope="col">Hospital City</th>
              <th scope="col">In or Out of Network</th>
              <th scope="col">Insurance Company</th>
              <th scope="col">Individual or Family Network</th>
              <th scope="col">Plan Category</th>
              <th scope="col">Premium</th>
              <th scope="col">Deductible</th>
              <th scope="col">Copay</th>
            </tr>
          </thead>
          <tbody>`;

        for (var key in sameCityAndState) {
          theHTML += `
            <tr>
              <th scope="row">${sameCityAndStateCounter}</th>
              <td>${sameCityAndState[key].age}</td>
              <td>${sameCityAndState[key].hotuos}</td>
              <td>`;
          
          // different commands based on whether or not the entry has many surgeries
          if (Array.isArray(sameCityAndState[key].prevSurgeries)) {
            // if they have many surgeries
            for (var surgeryIndex in sameCityAndState[key].prevSurgeries) { 
              theHTML += `
                ${sameCityAndState[key].prevSurgeries[surgeryIndex]}<br/>
              `;
            }
          } else {
            theHTML += `
                ${sameCityAndState[key].prevSurgeries}<br/>
            `;
          }

          theHTML +=
          `</td>
            <td>${sameCityAndState[key].oopCost}</td>
            <td>${sameCityAndState[key].hospitalName}</td>
            <td>${sameCityAndState[key].hospitalCity}</td>
            <td>${sameCityAndState[key].iooon}</td>
            <td>${sameCityAndState[key].companyName}</td>
            <td>${sameCityAndState[key].iofn}</td>
            <td>${sameCityAndState[key].planCategory}</td>
            <td>${sameCityAndState[key].premium}</td>
            <td>${sameCityAndState[key].deductible}</td>
            <td>${sameCityAndState[key].copay}</td>
          </tr>`;

          sameCityAndStateCounter++;
        }
      
        theHTML += `
              </tbody>
            </table> 
          </div>
        `;

        // experiences in all other cities in same state
        theHTML += `<div class="table-responsive aTable" style="margin-top: 50px;">
          <table class="table table-hover caption-top wideTable">
            <caption>Health Insurance Experiences in Other Cities in ${theState}:</caption>
            <thead>
              <tr>
                <th scope="col"></th>
                <th scope="col">Age</th>
                <th scope="col">City of Residence</th>
                <th scope="col">History of Tobacco Use or Smoking</th>
                <th scope="col">Previous Surgeries</th>
                <th scope="col">Out of Pocket Cost After Insurance</th>
                <th scope="col">Hospital Name</th>
                <th scope="col">Hospital City</th>
                <th scope="col">In or Out of Network</th>
                <th scope="col">Insurance Company</th>
                <th scope="col">Individual or Family Network</th>
                <th scope="col">Plan Category</th>
                <th scope="col">Premium</th>
                <th scope="col">Deductible</th>
                <th scope="col">Copay</th>
              </tr>
            </thead>
            <tbody>`;
        
        for (var key in sameState) {
          theHTML += `
            <tr>
              <th scope="row">${sameStateCounter}</th>
              <td>${sameState[key].age}</td>
              <td>${sameState[key].city}</td>
              <td>${sameState[key].hotuos}</td>
              <td>`;
          
          // different commands based on whether or not the entry has many surgeries
          if (Array.isArray(sameState[key].prevSurgeries)) {
            // if they have many surgeries
            for (var surgeryIndex in sameState[key].prevSurgeries) { 
              theHTML += `
                ${sameState[key].prevSurgeries[surgeryIndex]}
              `;
            }
          } else {
            theHTML += `
                ${sameState[key].prevSurgeries}
            `;
          }
              
          theHTML +=
              `
              </td>
              <td>${sameState[key].oopCost}</td>
              <td>${sameState[key].hospitalName}</td>
              <td>${sameState[key].hospitalCity}</td>
              <td>${sameState[key].iooon}</td>
              <td>${sameState[key].companyName}</td>
              <td>${sameState[key].iofn}</td>
              <td>${sameState[key].planCategory}</td>
              <td>${sameState[key].premium}</td>
              <td>${sameState[key].deductible}</td>
              <td>${sameState[key].copay}</td>
            </tr>
          `;

          sameStateCounter++;
        }
      
        theHTML += `
              </tbody>
            </table> 
          </div>
          `;

        return `${theHTML}`;
      }

      function returnMarketplaceData(theData, theState) {
        var theHTML = `<div class="table-responsive aTable" style="margin-top: 50px;">
          <table class="table table-hover caption-top wideTable">
            <caption>Publicly Available Data on Plans in ${theState} (Marketplace API Data):</caption>
            <thead>
              <tr>
                <th scope="col"></th>
                <th scope="col">ID</th>
                <th scope="col">Name</th>
                <th scope="col">Benefit Types</th>
                <th scope="col">Benefits URL</th>
                <th scope="col">Brochure URL</th>
                <th scope="col">Deductible Type</th>
                <th scope="col">Deductible Amount</th>
                <th scope="col">Disease Management Programs</th>
                <th scope="col">Issuer</th>
                <th scope="col">Metal Level</th>
                <th scope="col">Max Out of Pocket for Medical & Drug EHB Benefits (Total)</th>
                <th scope="col">Out of Pocket Cost</th>
                <th scope="col">Premium</th>
                <th scope="col">Enrollee Experience Rating</th>
                <th scope="col">Efficiency Rating</th>
                <th scope="col">Type</th>
              </tr>
            </thead>
            <tbody>`;

        var arrayOfPlans = theData.plans;
        
        // loop through each plan, displaying its attributes
        for (var key in arrayOfPlans) {
          theHTML += `
            <tr>
              <th scope="row">${parseInt(key) + 1}</th>
              <td>${arrayOfPlans[key].id}</td>
              <td>${arrayOfPlans[key].name}</td>
              <td>`;

          for (var i = 0; i < arrayOfPlans[key].benefits.length; i++) {
            theHTML += `${arrayOfPlans[key].benefits[i].name}<br/><br/>`;
          }
              
          theHTML += `
              </td>
              <td><a href="${arrayOfPlans[key].benefits_url}">Benefits</a></td>
              <td><a href="${arrayOfPlans[key].brochure_url}">Brochure</a></td>
              <td>${arrayOfPlans[key].deductibles[0].type}</td>
              <td>${arrayOfPlans[key].deductibles[0].amount}</td>
              <td>`;

          for (var i = 0; i < arrayOfPlans[key].disease_mgmt_programs.length; i++) {
            theHTML += `${arrayOfPlans[key].disease_mgmt_programs[i]}<br/>`;
          }
            
          theHTML += `
              </td>
              <td>${arrayOfPlans[key].issuer.name}</td>
              <td>${arrayOfPlans[key].metal_level}</td>
              <td>${arrayOfPlans[key].moops[0].amount}</td>
              <td>${arrayOfPlans[key].oopc}</td>
              <td>${arrayOfPlans[key].premium}</td>
              <td>${arrayOfPlans[key].quality_rating.enrollee_experience_rating}</td>
              <td>${arrayOfPlans[key].quality_rating.plan_efficiency_rating}</td>
              <td>${arrayOfPlans[key].type}</td>
            </tr>
          `;
        }

        theHTML += `
            </tbody>
          </table> 
        </div>
        `;

        return theHTML;
      }

      // triggers when the form is submitted
      $("#findPlanForm").submit(function(event) {
        // prevent form from reloading page
        event.preventDefault();

        // ajaxRequest to send inputted data to server
        var ajaxRequest = $.ajax({
          url: "/findIdealPlan",
          type: 'post',
          data: $('#findPlanForm').serialize()
        }).done(response => {
          // show them the data in result div based on their responses
          if (response) {
            $("#result").html(returnFromExperiences(response.city, response.state, response.queryExperiences));
          } else {
            // error in response
            console.log("Error in Response!");
          }
        }).fail(() => {
          $("#result").html("<h1>Error! Did you Enter Your Information Correctly?</h1>");
        });
      });

      // separate block of code for getting Marketplace API data
      $("#findPlanForm").submit(function(event) {
        var ajaxRequest = $.ajax({
          url: "/marketplaceapi",
          type: 'post',
          data: $('#findPlanForm').serialize()
        }).done(response => {
          // append public API data
          if (response) {
            // .append() in order to add to result div
            $("#result").append(returnMarketplaceData(response.apiData, response.state));
          } else {
            // error in response
            console.log("Error in Response!");
          }
        }).fail(() => {
          console.log("Something went wrong!");
        });
      });
    </script>

    <%- include('../partials/footer'); %>
  </body>
</html>